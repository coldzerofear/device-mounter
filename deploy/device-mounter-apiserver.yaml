---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: device-mounter-apiserver-issuer
  namespace: kube-system
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: device-mounter-apiserver-cert
  namespace: kube-system
spec:
  dnsNames:
    - device-mounter-apiserver.kube-system.svc
    - device-mounter-apiserver.kube-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: device-mounter-apiserver-issuer
  secretName: device-mounter-apiserver-cert
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: device-mounter-apiserver
  namespace: kube-system
data:
  tls-profile-v1alpha1: |
    type: Intermediate
    intermediate: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: device-mounter-apiserver-sa
  namespace: kube-system
  labels:
    control-plane: k8s-device-mounter-apiserver
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: device-mounter-apiserver-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get","list"]
  - apiGroups: [""]
    resources: ["pods/status"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get","list","watch"]
  - apiGroups: [""]
    resources: ["nodes/status"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: device-mounter-apiserver-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: device-mounter-apiserver-role
subjects:
  - kind: ServiceAccount
    name: device-mounter-apiserver-sa
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: device-mounter-apiserver-rolebinding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: device-mounter-apiserver-sa
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: apiserver
    app.kubernetes.io/created-by: device-mounter-apiserver
    app.kubernetes.io/instance: device-mounter-apiserver
  name: device-mounter-apiserver
  namespace: kube-system
spec:
  ports:
    - port: 443
      targetPort: api
      nodePort: 32002
  selector:
    app.kubernetes.io/component: apiserver
    app.kubernetes.io/created-by: device-mounter-apiserver
    app.kubernetes.io/instance: device-mounter-apiserver
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: apiserver
    app.kubernetes.io/created-by: device-mounter-apiserver
    app.kubernetes.io/instance: device-mounter-apiserver
  name: device-mounter-apiserver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: apiserver
      app.kubernetes.io/created-by: device-mounter-apiserver
      app.kubernetes.io/instance: device-mounter-apiserver
  replicas: 1
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        app.kubernetes.io/component: apiserver
        app.kubernetes.io/created-by: device-mounter-apiserver
        app.kubernetes.io/instance: device-mounter-apiserver
    spec:
      serviceAccountName: device-mounter-apiserver-sa
      # Mark this pod as a critical add-on; when enabled, the critical add-on
      # scheduler reserves resources for critical add-on pods so that they can
      # be rescheduled after a failure.
      # See https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
      priorityClassName: "system-node-critical"
      securityContext:
#        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 10
      restartPolicy: Always
      containers:
        - name: api-server
          image: registry.tydic.com/device-mounter/device-mounter:latest
          imagePullPolicy: Always
          command: ["/apiserver"]
          args:
            - "--tcp-bind-address=:8768"
            - "--mounter-bind-address=:1200"
            - "--v=3"
          ports:
            - name: api
              protocol: TCP
              containerPort: 8768
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: server-cert
              mountPath: /tmp/k8s-device-mounter/serving-certs
              readOnly: true
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 20m
              memory: 64Mi
      volumes:
        - name: config
          configMap:
            name: device-mounter-apiserver
        - name: server-cert
          secret:
            secretName: device-mounter-apiserver-cert
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.device-mounter.io
  annotations:
    cert-manager.io/inject-ca-from: kube-system/device-mounter-apiserver-cert
spec:
  insecureSkipTLSVerify: true
  group: device-mounter.io
  version: v1alpha1
  groupPriorityMinimum: 2000
  versionPriority: 10
  service:
    name: device-mounter-apiserver
    namespace: kube-system
    port: 443
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: device-mounter.io:generate
rules:
  - apiGroups:
      - device-mounter.io
    resources:
      - "pods/mount"
      - "pods/unmount"
    verbs:
      - "update"