---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: device-mounter-daemonset-sa
  namespace: kube-system
  labels:
    control-plane: k8s-device-mounter-daemonset
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: device-mounter-daemonset-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/status"]
    verbs: ["get"]
  - apiGroups: [ "" ]
    resources: [ "pods/exec" ]
    verbs: [ "create" ]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create","patch","update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get","list","watch","patch"]
  - apiGroups: [""]
    resources: ["nodes/status"]
    verbs: ["get"]
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: device-mounter-daemonset-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: device-mounter-daemonset-role
subjects:
  - kind: ServiceAccount
    name: device-mounter-daemonset-sa
    namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: daemonset
    app.kubernetes.io/created-by: device-mounter-daemonset
    app.kubernetes.io/instance: device-mounter-daemonset
  name: device-mounter-daemonset
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: daemonset
      app.kubernetes.io/created-by: device-mounter-daemonset
      app.kubernetes.io/instance: device-mounter-daemonset
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app.kubernetes.io/component: daemonset
        app.kubernetes.io/created-by: device-mounter-daemonset
        app.kubernetes.io/instance: device-mounter-daemonset
    spec:
      serviceAccountName: device-mounter-daemonset-sa
      # Mark this pod as a critical add-on; when enabled, the critical add-on
      # scheduler reserves resources for critical add-on pods so that they can
      # be rescheduled after a failure.
      # See https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
      priorityClassName: "system-node-critical"
      terminationGracePeriodSeconds: 60
      hostPID: true
      nodeSelector:
        device-mounter-enable: enable
      restartPolicy: Always
      containers:
        - name: mounter
          image: device-mounter/device-mounter:latest
          imagePullPolicy: Always
          securityContext:
            privileged: true
           # readOnlyRootFilesystem: true
          command: ["/mounter"]
          args:
            - "--tcp-bind-address=:1200"
            - "--device-slave-image-tag=alpine:latest"
            - "--device-slave-pull-policy=IfNotPresent"
            - "--v=3"
          env:
           # - name: CGROUP_DRIVER
           #   value: "cgroupfs" | "systemd"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
              # 挂载gpu设备
            - name: NVIDIA_VISIBLE_DEVICES
              value: all
            - name: NVIDIA_MIG_MONITOR_DEVICES
              value: all
              # 挂载gpu驱动
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: utility
              # 启用npu驱动
            - name: LD_LIBRARY_PATH
              value: /usr/local/Ascend/driver/lib64:/usr/local/Ascend/driver/lib64/driver:/usr/local/Ascend/driver/lib64/common:$LD_LIBRARY_PATH
          ports:
            - containerPort: 1200
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 1200
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: cgroup
              mountPath: /sys/fs/cgroup
            - name: kubelet
              mountPath: /var/lib/kubelet
            - name: vgpucache
              mountPath: /tmp/vgpu/containers
            - name: vgpu
              mountPath: /usr/local/vgpu
            - name: hiai-driver # 挂载npu驱动目录
              mountPath: /usr/local/Ascend/driver
              readOnly: true
            - name: mounter
              mountPath: /var/run/k8s-device-mounter
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: cgroup
          hostPath:
            type: Directory
            path: /sys/fs/cgroup
        - name: kubelet
          hostPath:
            type: Directory
            path: /var/lib/kubelet
        - name: vgpucache
          hostPath:
            type: DirectoryOrCreate
            path: /tmp/vgpu/containers
        - name: vgpu
          hostPath:
            type: DirectoryOrCreate
            path: /usr/local/vgpu
        - name: hiai-driver
          hostPath:
            type: DirectoryOrCreate
            path: /usr/local/Ascend/driver
        - name: mounter
          hostPath:
            type: DirectoryOrCreate
            path: /var/run/k8s-device-mounter